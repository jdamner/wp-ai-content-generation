name: Publish Release

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          coverage: pcov
          tools: composer

      - name: Install dependencies (production only)
        run: |
          npm install --no-audit --no-fund --prefer-offline --progress=false
          composer install --no-interaction --no-progress --no-suggest --optimize-autoloader --prefer-dist --no-dev

      - name: Run Build
        run: npm run build

      - name: Create Release Archive
        run: |
          # Create a clean directory for the release
          mkdir -p release-files
          
          # Copy necessary files for the WordPress plugin
          cp -r build/ release-files/
          cp -r includes/ release-files/
          cp -r vendor/ release-files/
          cp plugin.php release-files/
          
          # Create the release archive
          cd release-files
          zip -r ../wp-ai-content-generation.zip .
          cd ..

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./wp-ai-content-generation.zip
          asset_name: wp-ai-content-generation.zip
          asset_content_type: application/zip

      - name: Update Release Description with Playground Link
        uses: actions/github-script@v7
        with:
          script: |
            const releaseId = context.payload.release.id;
            const tagName = context.payload.release.tag_name;
            const downloadUrl = `https://github.com/${{ github.repository }}/releases/download/${tagName}/wp-ai-content-generation.zip`;
            
            // Create the blueprint JSON for WordPress Playground
            const blueprint = {
              "$schema": "https://playground.wordpress.net/blueprint-schema.json",
              "login": true,
              "plugins": [downloadUrl]
            };
            
            // Encode the blueprint as base64 for the URL fragment
            const blueprintJson = JSON.stringify(blueprint);
            const blueprintEncoded = Buffer.from(blueprintJson).toString('base64');
            const playgroundUrl = `https://playground.wordpress.net/#${blueprintEncoded}`;
            
            // Get the current release to preserve existing body content
            const { data: release } = await github.rest.repos.getRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: releaseId
            });
            
            // Update the release description to include the playground link
            const updatedBody = release.body + `[**Launch in WordPress Playground**](${playgroundUrl}).`;
            
            await github.rest.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: releaseId,
              body: updatedBody
            });